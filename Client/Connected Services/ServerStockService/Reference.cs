//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Client.ServerStockService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PlaceOrderData", Namespace="http://schemas.datacontract.org/2004/07/Server.Model")]
    [System.SerializableAttribute()]
    public partial class PlaceOrderData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ClientIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsBuyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double PriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int QuantityField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ClientId {
            get {
                return this.ClientIdField;
            }
            set {
                if ((this.ClientIdField.Equals(value) != true)) {
                    this.ClientIdField = value;
                    this.RaisePropertyChanged("ClientId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsBuy {
            get {
                return this.IsBuyField;
            }
            set {
                if ((this.IsBuyField.Equals(value) != true)) {
                    this.IsBuyField = value;
                    this.RaisePropertyChanged("IsBuy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Price {
            get {
                return this.PriceField;
            }
            set {
                if ((this.PriceField.Equals(value) != true)) {
                    this.PriceField = value;
                    this.RaisePropertyChanged("Price");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Quantity {
            get {
                return this.QuantityField;
            }
            set {
                if ((this.QuantityField.Equals(value) != true)) {
                    this.QuantityField = value;
                    this.RaisePropertyChanged("Quantity");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="StockData", Namespace="http://schemas.datacontract.org/2004/07/Server.Model")]
    [System.SerializableAttribute()]
    public partial class StockData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double StockPriceField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double StockPrice {
            get {
                return this.StockPriceField;
            }
            set {
                if ((this.StockPriceField.Equals(value) != true)) {
                    this.StockPriceField = value;
                    this.RaisePropertyChanged("StockPrice");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TradeOrderData", Namespace="http://schemas.datacontract.org/2004/07/Server.Model")]
    [System.SerializableAttribute()]
    public partial class TradeOrderData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BuyUserIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SellUserIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double TradePriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TradeQuantityField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BuyUserId {
            get {
                return this.BuyUserIdField;
            }
            set {
                if ((this.BuyUserIdField.Equals(value) != true)) {
                    this.BuyUserIdField = value;
                    this.RaisePropertyChanged("BuyUserId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SellUserId {
            get {
                return this.SellUserIdField;
            }
            set {
                if ((this.SellUserIdField.Equals(value) != true)) {
                    this.SellUserIdField = value;
                    this.RaisePropertyChanged("SellUserId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double TradePrice {
            get {
                return this.TradePriceField;
            }
            set {
                if ((this.TradePriceField.Equals(value) != true)) {
                    this.TradePriceField = value;
                    this.RaisePropertyChanged("TradePrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TradeQuantity {
            get {
                return this.TradeQuantityField;
            }
            set {
                if ((this.TradeQuantityField.Equals(value) != true)) {
                    this.TradeQuantityField = value;
                    this.RaisePropertyChanged("TradeQuantity");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MarketOrderBookData", Namespace="http://schemas.datacontract.org/2004/07/Server.Model")]
    [System.SerializableAttribute()]
    public partial class MarketOrderBookData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.Dictionary<double, System.Collections.Generic.Queue<Client.ServerStockService.PlaceOrderData>> BuyPendingOrdersField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.Dictionary<double, System.Collections.Generic.Queue<Client.ServerStockService.PlaceOrderData>> SellPendingOrdersField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.Dictionary<double, System.Collections.Generic.Queue<Client.ServerStockService.PlaceOrderData>> BuyPendingOrders {
            get {
                return this.BuyPendingOrdersField;
            }
            set {
                if ((object.ReferenceEquals(this.BuyPendingOrdersField, value) != true)) {
                    this.BuyPendingOrdersField = value;
                    this.RaisePropertyChanged("BuyPendingOrders");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.Dictionary<double, System.Collections.Generic.Queue<Client.ServerStockService.PlaceOrderData>> SellPendingOrders {
            get {
                return this.SellPendingOrdersField;
            }
            set {
                if ((object.ReferenceEquals(this.SellPendingOrdersField, value) != true)) {
                    this.SellPendingOrdersField = value;
                    this.RaisePropertyChanged("SellPendingOrders");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServerStockService.IStockService", CallbackContract=typeof(Client.ServerStockService.IStockServiceCallback))]
    public interface IStockService {
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IStockService/RegisterClient")]
        void RegisterClient(int clientId);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IStockService/RegisterClient")]
        System.Threading.Tasks.Task RegisterClientAsync(int clientId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/PlaceOrder", ReplyAction="http://tempuri.org/IStockService/PlaceOrderResponse")]
        void PlaceOrder(Client.ServerStockService.PlaceOrderData data);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/PlaceOrder", ReplyAction="http://tempuri.org/IStockService/PlaceOrderResponse")]
        System.Threading.Tasks.Task PlaceOrderAsync(Client.ServerStockService.PlaceOrderData data);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IStockServiceCallback {
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IStockService/BroadcastPriceToClient")]
        void BroadcastPriceToClient(Client.ServerStockService.StockData eventData);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IStockService/BroadcastTradeDataToClient")]
        void BroadcastTradeDataToClient(Client.ServerStockService.TradeOrderData eventData);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IStockService/BroadCastMarketOrderBookData")]
        void BroadCastMarketOrderBookData(Client.ServerStockService.MarketOrderBookData eventData);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IStockServiceChannel : Client.ServerStockService.IStockService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class StockServiceClient : System.ServiceModel.DuplexClientBase<Client.ServerStockService.IStockService>, Client.ServerStockService.IStockService {
        
        public StockServiceClient(System.ServiceModel.InstanceContext callbackInstance) : 
                base(callbackInstance) {
        }
        
        public StockServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName) : 
                base(callbackInstance, endpointConfigurationName) {
        }
        
        public StockServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, string remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public StockServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public StockServiceClient(System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, binding, remoteAddress) {
        }
        
        public void RegisterClient(int clientId) {
            base.Channel.RegisterClient(clientId);
        }
        
        public System.Threading.Tasks.Task RegisterClientAsync(int clientId) {
            return base.Channel.RegisterClientAsync(clientId);
        }
        
        public void PlaceOrder(Client.ServerStockService.PlaceOrderData data) {
            base.Channel.PlaceOrder(data);
        }
        
        public System.Threading.Tasks.Task PlaceOrderAsync(Client.ServerStockService.PlaceOrderData data) {
            return base.Channel.PlaceOrderAsync(data);
        }
    }
}
